



name: unit_tests_adress_sanitizer
on:
  push:
     branches: [ main, 'rbus-**' ]
  pull_request:
     branches: [ main, 'rbus-**' ]
jobs:
  all:
    runs-on: ubuntu-22.04
    steps:
      - name: Set up cache
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            build
            install
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Set up CMake
        # 3.16.x To support flow control commands to be overridden.
        # Installs in: find /opt -ipath *bin/cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.16.x'
      - name: Install packages
        run: >
          sudo apt update && sudo apt install -y libcurl4-openssl-dev libgtest-dev lcov gcovr
      - name: Checkout rbus
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          path: rbus
      - name: Configure Rbus
        if: steps.cache.outputs.cache-hit != 'true'
        run: >
          cmake 
          -S "${{github.workspace}}/rbus"
          -B build/rbus 
          -DCMAKE_INSTALL_PREFIX="${{github.workspace}}/install/usr" 
          -DBUILD_FOR_DESKTOP=ON
          -DENABLE_ADDRESS_SANITIZER=ON
          -DENABLE_UNIT_TESTING=ON
          -DENABLE_CODE_COVERAGE=ON          
          -DCMAKE_BUILD_TYPE=Debug
      - name: Build Rbus
        if: steps.cache.outputs.cache-hit != 'true'
        run: >
          make -C build/rbus 
      - name: Install rbus
        if: steps.cache.outputs.cache-hit != 'true'
        run: >
          make -C build/rbus install
      - name: Verify script location
        run: |
         cat << 'EOF' >address_sanitizer.sh
         #!/bin/sh

         LOGFILE=$1
         echo "Inside the script $LOGFILE"
         LEAKS_FOUND=false
         if grep -q "ERROR" "$LOGFILE"; then
          LEAKS_FOUND=true
          cat "$LOGFILE" >> $GITHUB_STEP_SUMMARY
          rm -rf $LOGFILE
          cd /tmp
          ls -lt
          exit 1
         fi
         EOF
         cd ${{github.workspace}}
         chmod a+x address_sanitizer.sh
      - name: Start rtrouted
        # nohup to keep it running.
        run: |
          cd install/usr
          export PREFIX=$PWD
          export LD_LIBRARY_PATH=$PREFIX/lib
          nohup ./bin/rtrouted -f -l DEBUG > /tmp/rtrouted_log.txt &
      - name: Run Gtest Cases
        run: |
          cd build/rbus
          export ASAN_OPTIONS=log_path=/tmp/asan_log_gtest
          nohup ./src/session_manager/rbus_session_mgr &
          ./unittests/rbus_gtest.bin || true
          cd /tmp
          ls -lt
           if ls /tmp/asan_log_gtest.* 1> /dev/null 2>&1; then
            cat /tmp/asan_log_gtest.* >> /tmp/asan_gtest_log.log
            rm -rf /tmp/asan_log_gtest.*
            cd ${{github.workspace}}
           ./address_sanitizer.sh /tmp/asan_gtest_log.log
           fi
          ls -lt 
          #second change
          #./unittests/rbus_gtest.bin
          #continue-on-error: true
          #if: failure()
           #cat /tmp/asan_log* >> $GITHUB_STEP_SUMMARY
           #first change
          #./unittests/rbus_gtest.bin || true
          #cat /tmp/asan_log_gtest* >> $GITHUB_STEP_SUMMARY
          cd /tmp
          ls -lt
          rm -rf /tmp/asan_log_gtest*
          ls -lt
      - name: Stop SessionManager
        run: |
          killall -9 rbus_session_mgr
      - name: Stop rtrouted
        run: |
          killall -9 rtrouted    
          

