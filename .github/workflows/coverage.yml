name: rbuscli
on:
  push:
     branches: [ main, 'rbus-**' ]
  pull_request:
     branches: [ main, 'rbus-**' ]
jobs:
  all:
    runs-on: ubuntu-22.04
    steps:
      - name: Set up cache
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            build
            install
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Set up CMake
        # 3.16.x To support flow control commands to be overridden.
        # Installs in: find /opt -ipath *bin/cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.16.x'
      - name: Install packages
        run: >
          sudo apt update && sudo apt install -y libcurl4-openssl-dev libgtest-dev lcov gcovr valgrind
      - name: Checkout rbus
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          path: rbus
      - name: Configure Rbus
        if: steps.cache.outputs.cache-hit != 'true'
        run: >
          cmake 
          -S "${{github.workspace}}/rbus"
          -B build/rbus 
          -DCMAKE_INSTALL_PREFIX="${{github.workspace}}/install/usr" 
          -DBUILD_FOR_DESKTOP=ON
          -DENABLE_UNIT_TESTING=ON
          -DENABLE_CODE_COVERAGE=ON          
          -DCMAKE_BUILD_TYPE=Debug
      - name: Build Rbus
        if: steps.cache.outputs.cache-hit != 'true'
        run: >
          make -C build/rbus 
      - name: Install rbus
        if: steps.cache.outputs.cache-hit != 'true'
        run: >
          make -C build/rbus install
      - name: Start rtrouted
        # nohup to keep it running.
        run: |
          cd install/usr
          export PREFIX=$PWD
          export LD_LIBRARY_PATH=$PREFIX/lib
          nohup ./bin/rtrouted -f -l DEBUG > /tmp/rtrouted_log.txt &
      #- name: Build rbuscli
       # run: | 
        #  cd rbuscli_source
         # make clean && make
      - name: Script for rbuscli
        run: |
           #mkdir -p /tmp/rbuscli_logs 
           cat << 'EOF' >rbuscli.sh
           #!/bin/sh
           LOG_DIR="/tmp/rbuscli_logs"
           mkdir -p "$LOG_DIR"
           TIMESTAMP=$(date +%Y%md_%H%M%S)
           LOG_FILE="$LOG_DIR/rbuscli_valgrind_$TIMESTAMP.log"

           #command to test 
           RBUS_CMD="get Device.DeviceInfo.ModelName"
           cd install/usr
           export PREFIX=$PWD
           export LD_LIBRARY_PATH=$PREFIX/li
           #run with valgrind
           valgrind --show-leak-kinds=all --track-origins=yes --error-exitcode=1 --log-file="$LOG_FILE" ./bin/rbuscli $RBUS_CMD

           if grep -q "definitely lost: [^0] bytes" "$LOG_FILE"; then
             echo "memory leak detected"
             exit 1
           else
             echo "No leaks detected"
             exit 0
           fi
           EOF
           cd ${{github.workspace}}
           chmod a+x rbuscli.sh
           ./rbuscli.sh
           
      
      
     
