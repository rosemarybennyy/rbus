name: unit_tests_valgrind
on:
  push:
     branches: [ main, 'rbus-**' ,rbus-codecoverage ]
  pull_request:
     branches: [ main, 'rbus-**', rbus-codecoverage ]
     types: [opened,synchronize]
jobs:
  all:
    runs-on: ubuntu-22.04
    steps:
      - name: Set up cache
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            build
            install
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Set up CMake
        # 3.16.x To support flow control commands to be overridden.
        # Installs in: find /opt -ipath *bin/cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.16.x'
      - name: Install packages
        run: >
          sudo apt update && sudo apt install -y libcurl4-openssl-dev libgtest-dev lcov gcovr libev-dev valgrind libxml2-utils
      - name: Checkout rbus
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          path: rbus
      - name: Configure Rbus
        if: steps.cache.outputs.cache-hit != 'true'
        run: >
          cmake 
          -S "${{github.workspace}}/rbus"
          -B build/rbus 
          -DCMAKE_INSTALL_PREFIX="${{github.workspace}}/install/usr" 
          -DBUILD_FOR_DESKTOP=ON
          -DENABLE_UNIT_TESTING=ON
          -DENABLE_CODE_COVERAGE=ON          
          -DCMAKE_BUILD_TYPE=Debug
      - name: Build Rbus
        if: steps.cache.outputs.cache-hit != 'true'
        run: >
          make -C build/rbus 
      - name: Install rbus
        if: steps.cache.outputs.cache-hit != 'true'
        run: >
          make -C build/rbus install
      - name: Start rtrouted
        run: |
          cd install/usr
          export PREFIX=$PWD
          export LD_LIBRARY_PATH=$PREFIX/lib
          valgrind --leak-check=full --error-exitcode=1  ./bin/rtrouted -f -l DEBUG > /tmp/rtrouted_log.txt &
      - name: Setup script
        run: |
            echo "creating check memory log script"
            cat << 'EOF' >memoryleak.sh
            #!/bin/sh
            
            LOG_FOLDER="/tmp"
            SUMMARY_FILE=$GITHUB_STEP_SUMMARY

            echo "| File | LEAK Summary | ERROR Summary | HEAP Summary |" > $SUMMARY_FILE
            echo "| --- | --- | --- | --- |" >> $SUMMARY_FILE
            
            for LOG_FILE in $LOG_FOLDER/*.log; do
            echo "Running logfile : $LOG_FILE
            BINARY_PATH=$(basename $LOG_FILE .log)
            echo "Running binary: $BINARY_PATH"
            echo "Running log file: $LOG_FILE"

            if[ -f $LOG_FILE ]; then
            echo "log file readable"
            LEAK_SUMMARY=$(grep -A 5 "LEAK SUMMARY:" $LOG_FILE)
            ERROR_SUMMARY=$(grep -A 1 "ERROR SUMMARY:" $LOG_FILE)
            HEAP_SUMMARY=$(grep -A 5 "HEAP SUMMARY:" $LOG_FILE)

            LEAK_SUMMARY=${LEAK_SUMMARY:-"No leaks found"}
            ERROR_SUMMARY=${ERROR_SUMMARY:-"No errors found"}
            HEAP_SUMMARY=${HEAP_SUMMARY:-"No heap summary found"}
            echo "| $BINARY_PATH | $LEAK_SUMMARY | $ERROR_SUMMARY | $HEAP_SUMMARY |" >> $SUMMARY_FILE
            else
            echo "logfile not exist"
            fi
            done
            EOF
            chmod a+x memory.sh
            #BINARY_PATH=$1
            #LOG_FILE=$2
            #echo "Running binary : \$BINARY_PATH"
            #echo "Running log file: \$LOG_FILE"
            #if [ -f $LOG_FILE ]; then
            #echo "Log file exists and is readable."
            #echo "Errors found in binary $BINARY_PATH" >>$GITHUB_STEP_SUMMARY
            #EXTRACT THE RELEVANT INFO
            #LEAK_SUMMARY=$(grep -A 5 "LEAK SUMMARY:" $LOG_FILE)
            #ERROR_SUMMARY=$(grep -A 1 "ERROR SUMMARY:" $LOG_FILE)
            #HEAP_SUMMARY=$(grep -A 5 "HEAP SUMMARY:" $LOG_FILE)
              #if [ -n "$LEAK_SUMMARY" ];then
              #echo "LEAK Summary" >>$GITHUB_STEP_SUMMARY
              #echo "$LEAK_SUMMARY"  >>$GITHUB_STEP_SUMMARY
              #fi
              #if [ -n "$ERROR_SUMMARY" ];then
              #echo "ERROR Summary" >>$GITHUB_STEP_SUMMARY
              #echo "$ERROR_SUMMARY"  >>$GITHUB_STEP_SUMMARY
              #fi
              #if [ -n "$HEAP_SUMMARY" ]; then
              #echo "HEAP SUMMARY" >>$GITHUB_STEP_SUMMARY
              #echo "$HEAP_SUMMARY" >>$GITHUB_STEP_SUMMARY
              #fi
            #cat $LOG_FILE >>$GITHUB_STEP_SUMMARY
            #else
            #echo "Log file does not exist"
            #fi
            #EOF
            #chmod a+x memoryleak.sh
     - name: Run test with valgrindd
        run: |
          cd install/usr
          export PREFIX=$PWD
          export LD_LIBRARY_PATH=$PREFIX/lib
          valgrind --leak-check=full --log-file=/tmp/rbusMethodProvider.log ./bin/rbusMethodProvider & 
          valgrind --leak-check=full  --log-file=/tmp/rbusMethodConsumert.log ./bin/rbusMethodConsumer -a      

      - name: Check Valgrind output
        id: valgrind_check
        run: |
             if grep -q "ERROR SUMMARY: 0 errors" /tmp/plog.txt; then
             echo "No memory leaks found"
             echo "status=success" >> $GITHUB_ENV
             else
             echo "Memory leaks detected"
             echo "status=failure" >> $GITHUB_ENV
             cat /tmp/plog.txt
             #cat /tmp/plog.txt >>$GITHUB_STEP_SUMMARY
             ./memoryleak.sh "./bin/rbusMethodConsumer" "/tmp/plog.txt"
             fi
      - name: Run multiRbusOpenMethod Unit Test with Valgrind
        run: |
          cd install/usr
          export PREFIX=$PWD
          export LD_LIBRARY_PATH=$PREFIX/lib
          valgrind --leak-check=full --log-file=/tmp/test2.txt ./bin/multiRbusOpenMethodProvider &
          valgrind --leak-check=full --log-file=/tmp/test3.txt ./bin/multiRbusOpenMethodConsumer -a
          #ls -lt /tmp
          #if grep -q "ERROR SUMMARY: 0 errors" /tmp/test2.txt; then
             #echo "No memory leaks found"
             #echo "status=success" >> $GITHUB_ENV
             #else
             #echo "Memory leaks detected"
             #echo "status=failure" >> $GITHUB_ENV
             #cat /tmp/plog.txt >>$GITHUB_STEP_SUMMARY
             #./memoryleak.sh "multiRbusOpenMethodProvider" "/tmp/test2.txt"
             #fi

      - name: Stop SessionManager
        run: |
          #killall -9 rbus_session_mgr
      - name: Stop rtrouted
        run: |
          killall -9 rtrouted

  
